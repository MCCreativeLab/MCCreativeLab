From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: verdox <mail.ysp@web.de>
Date: Wed, 19 Jun 2024 15:20:34 +0000
Subject: [PATCH] Add MCCWorldHook


diff --git a/src/main/java/net/minecraft/world/level/Level.java b/src/main/java/net/minecraft/world/level/Level.java
index 2b203c35953c78fc1d8b3299614459b318246674..616c949da92b2e46cfe1277977f327dc73342bea 100644
--- a/src/main/java/net/minecraft/world/level/Level.java
+++ b/src/main/java/net/minecraft/world/level/Level.java
@@ -164,6 +164,7 @@ public abstract class Level implements LevelAccessor, AutoCloseable, ca.spottedl
     public int wakeupInactiveRemainingMonsters;
     public int wakeupInactiveRemainingVillagers;
     // Paper end
+    public de.verdox.mccreativelab.behaviour.MCCWorldHook mccWorldHook = new de.verdox.mccreativelab.behaviour.MCCWorldHook() {}; // MCCLab - Add MCCWorldHook
     public boolean populating;
     public final org.spigotmc.SpigotWorldConfig spigotConfig; // Spigot
     // Paper start - add paper world config
@@ -1226,6 +1227,7 @@ public abstract class Level implements LevelAccessor, AutoCloseable, ca.spottedl
                 this.onBlockStateChange(blockposition, iblockdata1, iblockdata2);
             }
             // CraftBukkit end
+            mccWorldHook.onBlockChange(org.bukkit.craftbukkit.block.CraftBlock.at(this, blockposition), CraftBlockData.createData(oldBlock), CraftBlockData.createData(newBlock));
         }
     }
     // CraftBukkit end
diff --git a/src/main/java/net/minecraft/world/level/block/Block.java b/src/main/java/net/minecraft/world/level/block/Block.java
index c0e3feefe22410c851de80bad51990610ed3fad6..de3b2ad6d143d939f4a85901a28a2865daf0f62b 100644
--- a/src/main/java/net/minecraft/world/level/block/Block.java
+++ b/src/main/java/net/minecraft/world/level/block/Block.java
@@ -338,7 +338,12 @@ public class Block extends BlockBehaviour implements ItemLike {
     public static void dropResources(BlockState state, Level world, BlockPos pos, @Nullable BlockEntity blockEntity, @Nullable Entity entity, ItemStack tool, boolean dropExperience) {
     // Paper end - Properly handle xp dropping
         if (world instanceof ServerLevel) {
-            Block.getDrops(state, (ServerLevel) world, pos, blockEntity, entity, tool).forEach((itemstack1) -> {
+            List<org.bukkit.inventory.ItemStack> bukkitLoot = new java.util.LinkedList<>();
+            for (ItemStack drop : Block.getDrops(state, (ServerLevel) world, pos, blockEntity, entity, tool)) {
+                bukkitLoot.add(drop.asBukkitCopy());
+            }
+            world.mccWorldHook.onBlockDrawLoot(org.bukkit.craftbukkit.block.CraftBlock.at(world, pos), entity != null ? entity.getBukkitEntity() : null, tool.asBukkitMirror(), dropExperience,bukkitLoot);
+            bukkitLoot.stream().map(org.bukkit.craftbukkit.inventory.CraftItemStack::asNMSCopy).forEach((itemstack1) -> {
                 Block.popResource(world, pos, itemstack1);
             });
             state.spawnAfterBreak((ServerLevel) world, pos, tool, dropExperience); // Paper - Properly handle xp dropping
